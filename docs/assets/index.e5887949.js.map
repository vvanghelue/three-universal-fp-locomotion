{"version":3,"file":"index.e5887949.js","sources":["../../index.js","../../vite/dynamic-import-polyfill","../../examples/example1.js"],"sourcesContent":["import * as THREE from \"three\"\n\n// detect context before loading\nlet context \nif (window) {\n    context = 'desktop'\n    if (window.document) {\n        window.document.addEventListener('touchstart', () => {\n            context = \"mobile\"\n        })\n    }\n    const agent = window.navigator.userAgent\n    if (agent.includes(\"Quest\")) {\n        context = \"vr\"\n    }\n}\n\nexport default function () {\n    if (!context) {\n        throw new Error('Cannot detect context, you must handle a user-based click before starting')\n    }\n    return {\n        on() {},\n        getContext: () => context\n    }\n}","const p = function polyfill(modulePath = '.', importFunctionName = '__import__') {\n    try {\n        self[importFunctionName] = new Function('u', `return import(u)`);\n    }\n    catch (error) {\n        const baseURL = new URL(modulePath, location);\n        const cleanup = (script) => {\n            URL.revokeObjectURL(script.src);\n            script.remove();\n        };\n        self[importFunctionName] = (url) => new Promise((resolve, reject) => {\n            const absURL = new URL(url, baseURL);\n            // If the module has already been imported, resolve immediately.\n            if (self[importFunctionName].moduleMap[absURL]) {\n                return resolve(self[importFunctionName].moduleMap[absURL]);\n            }\n            const moduleBlob = new Blob([\n                `import * as m from '${absURL}';`,\n                `${importFunctionName}.moduleMap['${absURL}']=m;`\n            ], { type: 'text/javascript' });\n            const script = Object.assign(document.createElement('script'), {\n                type: 'module',\n                src: URL.createObjectURL(moduleBlob),\n                onerror() {\n                    reject(new Error(`Failed to import: ${url}`));\n                    cleanup(script);\n                },\n                onload() {\n                    resolve(self[importFunctionName].moduleMap[absURL]);\n                    cleanup(script);\n                }\n            });\n            document.head.appendChild(script);\n        });\n        self[importFunctionName].moduleMap = {};\n    }\n};__VITE_IS_MODERN__&&p(\"assets/\");","import fpLcomotion from '../index'\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader.js\"\n\nwindow.openExample1 = () => {\n    const loader = new GLTFLoader().setPath('./')\n    loader.load('demo-scene/demo-scene.glb', function (gltf) {\n        console.log(gltf.scene)\n    })\n}"],"names":["modulePath","importFunctionName","Function","error","baseURL","URL","location","cleanup","script","revokeObjectURL","src","remove","url","Promise","resolve","reject","absURL","self","moduleMap","moduleBlob","Blob","type","Object","assign","document","createElement","createObjectURL","[object Object]","Error","head","appendChild","p","window","addEventListener","navigator","userAgent","includes","openExample1","GLTFLoader","setPath","load","gltf","log","scene"],"mappings":"yCAIA,GCJU,SAAkBA,EAAa,IAAKC,EAAqB,uBAEtDA,GAAsB,IAAIC,SAAS,IAAK,0BAE1CC,SACGC,EAAU,IAAIC,IAAIL,EAAYM,UAC9BC,EAAWC,QACTC,gBAAgBD,EAAOE,OACpBC,eAENV,GAAuBW,GAAQ,IAAIC,SAAQ,CAACC,EAASC,WAChDC,EAAS,IAAIX,IAAIO,EAAKR,MAExBa,KAAKhB,GAAoBiB,UAAUF,UAC5BF,EAAQG,KAAKhB,GAAoBiB,UAAUF,UAEhDG,EAAa,IAAIC,KAAK,CACxB,uBAAuBJ,MACvB,GAAGf,gBAAiCe,UACrC,CAAEK,KAAM,oBACLb,EAASc,OAAOC,OAAOC,SAASC,cAAc,UAAW,CAC3DJ,KAAM,SACNX,IAAKL,IAAIqB,gBAAgBP,GACzBQ,YACW,IAAIC,MAAM,qBAAqBhB,QAC9BJ,IAEZmB,WACYV,KAAKhB,GAAoBiB,UAAUF,MACnCR,eAGPqB,KAAKC,YAAYtB,WAEzBP,GAAoBiB,UAAY,IAEvBa,CAAE,WDhCpBC,OAAQ,CAEJA,OAAOR,iBACAA,SAASS,iBAAiB,cAAc,SAIrCD,OAAOE,UAAUC,UACrBC,SAAS,SETvBJ,OAAOK,aAAe,MACH,IAAIC,GAAaC,QAAQ,MACjCC,KAAK,6BAA6B,SAAUC,WACvCC,IAAID,EAAKE"}